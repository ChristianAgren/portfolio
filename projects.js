
/** Each object in array defines a project card and the information needed for building it
 * @typedef {[{name: String, title: String, desc: String, bdytxt: String, githubLink: String}]} Projects
 */


/** Each project needs unique name properties for links to work
 * @type {Projects} Defines projects
 */
const projects = [{
        name: "helloworld", //unique name
        title: "Hello World",
        desc: "Placeholder project",
        bdytxt: "This card was generated by Javascript and is a placeholder for future projects",
        githubLink: "#"
    },
    {
        name: "title", //unique name
        title: "This is card 2",
        desc: "Placeholder project",
        bdytxt: "This card was generated by Javascript and is a placeholder for future projects",
        githubLink: "#"
    },
    {
        name: "title2", //unique name
        title: "This is card 3",
        desc: "Placeholder project",
        bdytxt: "This card was generated by Javascript and is a placeholder for future projects",
        githubLink: "#"
    },
    {
        name: "title3", //unique name
        title: "This is card 4",
        desc: "Placeholder project",
        bdytxt: "This card was generated by Javascript and is a placeholder for future projects",
        githubLink: "#"
    },
    {
        name: "title4", //unique name
        title: "This is card 5",
        desc: "Placeholder project",
        bdytxt: "This card was generated by Javascript and is a placeholder for future projects",
        githubLink: "#"
    },

    //For now, a maximum of *6* projects can be added at one time
];

/**
 * Creates necessary nodes for project cards
 */
function createDOMProjectElements() {
    
    projects.forEach(project => {
        const   newCardDiv = document.createElement('div'),
                newCardTitle = document.createElement('div'),
                newCardDesc = document.createElement('div'),
                newCardBodyText = document.createElement('div'),
                newCardLink = document.createElement('div');
                

            buildNewCardStructure(newCardDiv, newCardTitle, newCardDesc, newCardBodyText, newCardLink)
            addContentToTitle(project, newCardTitle)
            addContentToDesc(project, newCardDesc)
            addContentToBody(project, newCardBodyText)
            addContentToLink(newCardLink)
            addClasslistToProjectNodes(newCardDiv, newCardTitle, newCardDesc, newCardBodyText, newCardLink, project)
            addLinkToProject(project)
    });
}

/**
 * Creates child and textcontent for link node
 * @param {HTMLDivElement} link The created link node
 */
function addContentToLink(link) {
    const   linkContent = document.createTextNode('Find it on github!'),
            linkNode = document.createElement('a');

    buildIndividualNodesWithContent(link, linkNode, linkContent)         
}

/**
 * Creates child and textcontent for link node
 * @param {Object} project The project for the current iteration of the build loop
 * @param {HTMLDivElement} desc The created desc node
 */
function addContentToDesc(project, desc) {
    const   descContent = document.createTextNode(project.desc),
            descNode = document.createElement('p');

    buildIndividualNodesWithContent(desc, descNode, descContent)
}

/**
 * Creates child and textcontent for title node
 * @param {Object} project The project for the current iteration of the build loop
 * @param {HTMLDivElement} title The created title node
 */
function addContentToTitle(project, title) {
    const   titleContent = document.createTextNode(project.title),
            titleNode = document.createElement('h3');

    buildIndividualNodesWithContent(title, titleNode, titleContent)
}

/**
 * Creates textcontent for body node
 * @param {Object} project The project for the current iteration of the build loop
 * @param {HTMLDivElement} body The created body node
 */
function addContentToBody(project, body) {
    const   bodyContent = document.createTextNode(project.bdytxt)
    body.append(bodyContent)
}

/**
 * Builds the DOM structure for individual nodes
 * @param {HTMLDivElement} parent The parent element
 * @param {HTMLDivElement} child  The child element
 * @param {Text} content The content that is to be attached to the child
 */
function buildIndividualNodesWithContent(parent, child, content) {
    child.append(content)
    parent.append(child)
}


/**
 * Finalizes structure for card and builds it in the DOM
 * @param {HTMLDivElement} parent The parent element
 * @param {HTMLDivElement} title The title node
 * @param {HTMLDivElement} desc The desc node
 * @param {HTMLDivElement} body The bodytext node
 * @param {HTMLDivElement} link The link node
 */
function buildNewCardStructure(parent, title, desc, body, link) {
    const   projectContainerDiv = document.querySelector('div.projects_card_container'),
            buildArray = [title, desc, body, link];

    projectContainerDiv.append(parent)
    
    buildArray.forEach(node => {
        parent.append(node)
    });   
}

/**
 * Adds necessary classes to the card nodes
 * @param {HTMLDivElement} parent The parent element
 * @param {HTMLDivElement} title The title node
 * @param {HTMLDivElement} desc The desc node
 * @param {HTMLDivElement} body The bodytext node
 * @param {HTMLDivElement} link The link node
 * @param {Object} project The project for the current iteration of the build loop
 */
function addClasslistToProjectNodes(parent, title, desc, body, link, project) {
    parent.classList.add('project_card')
    parent.classList.add('card')
    title.classList.add('project_card_title')
    desc.classList.add('project_card_desc')
    body.classList.add('project_card_bdytxt')
    link.classList.add('project_card_link')
    link.classList.add(project.name)
}

/**
 * Adds href link to <a> node for linking
 * @param {Object} project The project for the current iteration of the build loop
 */
function addLinkToProject(project) {
    const   addLink = document.querySelector('.' + project.name + ' a');
    
    addLink.href = project.githubLink
}